{"version":3,"sources":["filtro_productos.js"],"names":["PRODUCTS_CONTAINER","document","getElementById","BASE_URL","JSON_URL","PRODUCTS_IMAGES_URL","FILTER_BUTTONS","querySelectorAll","products","renderProducts","data","template","content","fragment","createDocumentFragment","templateSelector","categories","container","querySelector","concat","imagen","name","description","price","forEach","join","setAttribute","image","textContent","clone","cloneNode","appendChild","fetch","then","response","json","err","console","log","button","addEventListener","e","filterProduct","setActiveBtn","currentBtn","target","classList","remove","add","category","btnFilter","product","dataset","filter","search"],"mappings":"AAAA,aAAA,IAAMA,mBAAqBC,SAASC,eAAe,qBAC7CC,SAAW,0CACXC,SAAWD,SAAW,mBACtBE,oBAAsBF,SAAW,gBACjCG,eAAiBL,SAASM,iBAAiB,0BAC7CC,SAAW,GAWf,SAASC,eAAeC,GAMvB,IAAIC,EAAWV,SAASC,eAAe,yBAAyBU,QAC/DC,EAAWZ,SAASa,yBACpBC,EAAmB,gBACnBC,EAAa,GAGVC,EAAYN,EAASO,cAAT,GAAAC,OAA0BJ,IACzCK,EAAST,EAASO,cAAT,GAAAC,OAA0BJ,EAA1B,cACTM,EAAOV,EAASO,cAAT,GAAAC,OAA0BJ,EAA1B,WACPO,EAAcX,EAASO,cAAT,GAAAC,OAA0BJ,EAA1B,WACdQ,EAAQZ,EAASO,cAAT,GAAAC,OAA0BJ,EAA1B,gBAGTL,EAAKc,SAAQ,SAACd,GAEbM,EAAaN,EAAKM,WAAWS,KAAK,KAClCR,EAAUS,aAAa,gBAAiBV,GACxCI,EAAOM,aAAa,MAAOrB,oBAAsBK,EAAKiB,OACtDN,EAAKO,YAAclB,EAAKW,KACxBC,EAAYM,YAAclB,EAAKY,YAC/BC,EAAMK,YAAclB,EAAKa,MAGzB,IAAMM,EAAQlB,EAASmB,WAAU,GACjCjB,EAASkB,YAAYF,EACrB,IAGD7B,mBAAmB+B,YAAYlB,GAG/BL,SAAWP,SAASM,iBAAiB,mCACrC,CA9CDyB,MAAM5B,UACJ6B,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACvB,GAAD,OAAUD,eAAeC,EAAzB,IAFP,OAGQ,SAAC0B,GACPC,QAAQC,IAAI,UAAYF,EACxB,IA4CF9B,eAAekB,SAAQ,SAACe,GACvBA,EAAOC,iBAAiB,SAAS,SAACC,GAAD,OAAOC,cAAcD,EAArB,GACjC,IAGD,IAAME,aAAe,SAACF,GACrB,IAAIG,EAAaH,EAAEI,OAEnBvC,eAAekB,SAAQ,SAACe,GACvBA,EAAOO,UAAUC,OAAO,UACxBR,EAAOb,aAAa,eAAgB,QACpC,IAEDkB,EAAWlB,aAAa,eAAgB,QACxCkB,EAAWE,UAAUE,IAAI,SACzB,EAGKN,cAAgB,SAACD,GACtB,IAAIQ,EAAW,GACdC,EAAY,GAGbP,aAAaF,GAEbjC,SAASgB,SAAQ,SAAC2B,GAEjBF,EAAWE,EAAQC,QAAQH,SAC3BC,EAAYT,EAAEI,OAAOO,QAAQC,OAC7BF,EAAQL,UAAUC,OAAO,SAGW,IAAhCE,EAASK,OAAOJ,IACnBC,EAAQL,UAAUE,IAAI,QAGL,UAAdE,GACHC,EAAQL,UAAUC,OAAO,OAE1B,GACD","file":"filtro_productos.min.js","sourcesContent":["const PRODUCTS_CONTAINER = document.getElementById('product-container');\r\nconst BASE_URL = 'http://localhost/quality-bakery/assets/';\r\nconst JSON_URL = BASE_URL + 'mocks/cakes.json';\r\nconst PRODUCTS_IMAGES_URL = BASE_URL + 'img/pasteles/';\r\nconst FILTER_BUTTONS = document.querySelectorAll('.filter-buttons button');\r\nlet products = [];\r\n\r\n/* llamar a archivo json de los productos */\r\nfetch(JSON_URL)\r\n\t.then((response) => response.json())\r\n\t.then((data) => renderProducts(data))\r\n\t.catch((err) => {\r\n\t\tconsole.log('error: ' + err);\r\n\t});\r\n\r\n/* crear e inyectar elementos */\r\nfunction renderProducts(data) {\r\n\t/*\r\n\t * <template>: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\r\n\t * document fragments: https://developer.mozilla.org/es/docs/Web/API/DocumentFragment\r\n\t */\r\n\r\n\tlet template = document.getElementById('template-product-card').content,\r\n\t\tfragment = document.createDocumentFragment(),\r\n\t\ttemplateSelector = '.product-card',\r\n\t\tcategories = '';\r\n\r\n\t/* secciones del template */\r\n\tlet container = template.querySelector(`${templateSelector}`),\r\n\t\timagen = template.querySelector(`${templateSelector}__img img`),\r\n\t\tname = template.querySelector(`${templateSelector}__name`),\r\n\t\tdescription = template.querySelector(`${templateSelector}__desc`),\r\n\t\tprice = template.querySelector(`${templateSelector}__price-tag`);\r\n\r\n\t/* configuración del template */\r\n\tdata.forEach((data) => {\r\n\t\t// console.table(data);\r\n\t\tcategories = data.categories.join(' ');\r\n\t\tcontainer.setAttribute('data-category', categories);\r\n\t\timagen.setAttribute('src', PRODUCTS_IMAGES_URL + data.image);\r\n\t\tname.textContent = data.name;\r\n\t\tdescription.textContent = data.description;\r\n\t\tprice.textContent = data.price;\r\n\r\n\t\t/* copiar template e inyectar en fragmento */\r\n\t\tconst clone = template.cloneNode(true);\r\n\t\tfragment.appendChild(clone);\r\n\t});\r\n\r\n\t/* inyectar fragmento con productos al contenedor */\r\n\tPRODUCTS_CONTAINER.appendChild(fragment);\r\n\r\n\t/* guardar productos */\r\n\tproducts = document.querySelectorAll('#product-container .product-card');\r\n}\r\n\r\n/* agregar evento de filtrado a todos los botones */\r\nFILTER_BUTTONS.forEach((button) => {\r\n\tbutton.addEventListener('click', (e) => filterProduct(e));\r\n});\r\n\r\n/* configurar estilos y atributo ARIA al clickear botones */\r\nconst setActiveBtn = (e) => {\r\n\tlet currentBtn = e.target;\r\n\r\n\tFILTER_BUTTONS.forEach((button) => {\r\n\t\tbutton.classList.remove('active');\r\n\t\tbutton.setAttribute('aria-pressed', 'false');\r\n\t});\r\n\r\n\tcurrentBtn.setAttribute('aria-pressed', 'true');\r\n\tcurrentBtn.classList.add('active');\r\n};\r\n\r\n/* filtrar productos de acuerdo al botón clickeado */\r\nconst filterProduct = (e) => {\r\n\tlet category = '',\r\n\t\tbtnFilter = '';\r\n\r\n\t/* configurar botón clickeado */\r\n\tsetActiveBtn(e);\r\n\r\n\tproducts.forEach((product) => {\r\n\t\t/* dataset: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset */\r\n\t\tcategory = product.dataset.category;\r\n\t\tbtnFilter = e.target.dataset.filter;\r\n\t\tproduct.classList.remove('hide');\r\n\r\n\t\t/* ocultar producto si no tiene la categoría */\r\n\t\tif (category.search(btnFilter) === -1) {\r\n\t\t\tproduct.classList.add('hide');\r\n\t\t}\r\n\r\n\t\tif (btnFilter === 'todos') {\r\n\t\t\tproduct.classList.remove('hide');\r\n\t\t}\r\n\t});\r\n};\r\n"]}